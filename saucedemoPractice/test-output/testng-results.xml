<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="6" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-16T07:29:52 UTC" name="Default suite" finished-at="2025-07-16T07:30:50 UTC" duration-ms="58434">
    <groups>
    </groups>
    <test started-at="2025-07-16T07:29:52 UTC" name="Default test" finished-at="2025-07-16T07:30:50 UTC" duration-ms="58434">
      <class name="test.LoginPageTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:29:52 UTC" name="setup" finished-at="2025-07-16T07:29:56 UTC" duration-ms="3530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testValidLoginAndPurchaseFlow()[pri:1, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:29:56 UTC" name="testValidLoginAndPurchaseFlow" finished-at="2025-07-16T07:30:04 UTC" duration-ms="8047" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=138.0.7204.101)
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows Server 2022', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eae8821238324f4d0b4ab235ff13ccc6, findElement {using=id, value=user-name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.101, chrome: {chromedriverVersion: 138.0.7204.157 (e533e98b126..., userDataDir: C:\Users\LABSKR~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54495}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54495/devtoo..., se:cdpVersion: 138.0.7204.101, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eae8821238324f4d0b4ab235ff13ccc6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=138.0.7204.101)
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows Server 2022', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [eae8821238324f4d0b4ab235ff13ccc6, findElement {using=id, value=user-name}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.101, chrome: {chromedriverVersion: 138.0.7204.157 (e533e98b126..., userDataDir: C:\Users\LABSKR~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54495}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54495/devtoo..., se:cdpVersion: 138.0.7204.101, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eae8821238324f4d0b4ab235ff13ccc6
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at page.LoginPage.login(LoginPage.java:21)
at test.LoginPageTest.testValidLoginAndPurchaseFlow(LoginPageTest.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLoginAndPurchaseFlow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:04 UTC" name="tearDown" finished-at="2025-07-16T07:30:04 UTC" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:04 UTC" name="setup" finished-at="2025-07-16T07:30:06 UTC" duration-ms="2267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:06 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:09 UTC" duration-ms="2540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:09 UTC" name="tearDown" finished-at="2025-07-16T07:30:09 UTC" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:09 UTC" name="setup" finished-at="2025-07-16T07:30:11 UTC" duration-ms="2227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:11 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:14 UTC" duration-ms="2615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong_pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:14 UTC" name="tearDown" finished-at="2025-07-16T07:30:14 UTC" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:14 UTC" name="setup" finished-at="2025-07-16T07:30:16 UTC" duration-ms="2220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:16 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:19 UTC" duration-ms="2562" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unexpected error message for credentials:  / secret_sauce expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unexpected error message for credentials:  / secret_sauce expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at test.LoginPageTest.testInvalidLogin(LoginPageTest.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:19 UTC" name="tearDown" finished-at="2025-07-16T07:30:19 UTC" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:19 UTC" name="setup" finished-at="2025-07-16T07:30:21 UTC" duration-ms="2339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:21 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:24 UTC" duration-ms="2561" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unexpected error message for credentials: standard_user /  expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unexpected error message for credentials: standard_user /  expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at test.LoginPageTest.testInvalidLogin(LoginPageTest.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:24 UTC" name="tearDown" finished-at="2025-07-16T07:30:24 UTC" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:24 UTC" name="setup" finished-at="2025-07-16T07:30:26 UTC" duration-ms="2195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:26 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:29 UTC" duration-ms="2545" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unexpected error message for credentials:  /  expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unexpected error message for credentials:  /  expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at test.LoginPageTest.testInvalidLogin(LoginPageTest.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:29 UTC" name="tearDown" finished-at="2025-07-16T07:30:29 UTC" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:29 UTC" name="setup" finished-at="2025-07-16T07:30:31 UTC" duration-ms="2420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:31 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:34 UTC" duration-ms="2407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:34 UTC" name="tearDown" finished-at="2025-07-16T07:30:34 UTC" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:34 UTC" name="setup" finished-at="2025-07-16T07:30:36 UTC" duration-ms="2166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:36 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:39 UTC" duration-ms="2633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:39 UTC" name="tearDown" finished-at="2025-07-16T07:30:39 UTC" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:39 UTC" name="setup" finished-at="2025-07-16T07:30:41 UTC" duration-ms="2390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLogin(java.lang.String,java.lang.String)[pri:2, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:41 UTC" name="testInvalidLogin" data-provider="invalidLoginData" finished-at="2025-07-16T07:30:44 UTC" duration-ms="2566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SECRET_SAUCE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:44 UTC" name="tearDown" finished-at="2025-07-16T07:30:44 UTC" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:44 UTC" name="setup" finished-at="2025-07-16T07:30:46 UTC" duration-ms="2269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCheckoutWithEmptyFields()[pri:3, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:46 UTC" name="testCheckoutWithEmptyFields" finished-at="2025-07-16T07:30:50 UTC" duration-ms="4115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckoutWithEmptyFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.LoginPageTest@50eac852]" started-at="2025-07-16T07:30:50 UTC" name="tearDown" finished-at="2025-07-16T07:30:50 UTC" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.LoginPageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
